<!DOCTYPE html>
<html>
<head>
	<meta name="viewport" content="initial-scale=1,maximum-scale=1">
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<meta content="utf-8" http-equiv="encoding">
	<title>Double Banner</title>
	<script type="text/javascript">
		function onImpression() {}

		function isDevEnvironment() {
			return "debug" == adParams.environmentId || window.location.href.match(/[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:[0-9]+/)
		}

		window.addEventListener("resize", function() {//JM
			window.adParams.adWidth = window.innerWidth;
			window.adParams.adHeight = window.innerHeight;
		});
		
		var debug = !1,
			clickTag = [1],
			adParams = {
				networkId: "FLASHTALKING",
				adWidth: window.innerWidth,
				adHeight: window.innerHeight,
				environmentId: "velvet",
				politeLoadAfter: 1,
				failoverOnError: !0,
				responsive: !0,
				dateSettings: {
					dateOverride: null
				},
				velvet: {
					client: "yIG72AFrQw",
					locale: "YByJxnsJmF",
					segment: "Sm88KRERjw",
					/* multi test */
					// locale: "ThjJXnfuPd",
					// segment: "E3fgyZLhuK",
					campaign: "j0pyJkOAXQ"
				},
				redAnalytics: {
					serverUrl: "http://sw1-ads.ff0000.com/",
					clientId: "16",
					campaignId: "39",
					adName: "Evergreen - Image",
					clock: (new Date).getTime(),
					stages: {
						INITIAL: "initial",
						ANIMATION: "animation",
						COMPLETE: "complete",
						FAILOVER: "failover"
					}
				},
				forceHttps: !0
			},
			assets = {
				preloader: {
					backgroundColor: "#1c1c1c",
					images: [{
						source: "logo_preloader.png"
					}]
				},
				failover: {
					images: [{
							source: "backup.jpg"
						},
						{
							source: "backup_plus.jpg"
						},
					]
				},
				images: [],
				fonts: [],
				payload: {
					text: ["build.bundle.js"],
					binary: ["fba-payload.png"]
				}
			};
		assets.preloader.images[0].scale = adParams.adWidth >= 667 ? adParams.adWidth / 2208 : adParams.adWidth / 1242;
		var environments = [{
				id: "velvet",
				runPath: "",
				adPath: ""
			}, {
				id: "debug",
				runPath: "http://red.ff0000-cdn.net/_debug/msnbc/2017/breaking_news/contextual_conquest/1242x300_responsive/doublebanner/FLASHTALKING/1242x300/",
				adPath: ""
			}],
			includes = function () {
				return []
			},
			externalIncludes = [],
			runtimeIncludes = {},
			views = function () {
				return []
			}
	</script>
	<style type="text/css">
		#view,
		body,
		html {
			width: 100%;
			height: 100%
		}

		body {
			margin: 0;
			outline: 0;
			-webkit-tap-highlight-color: transparent
		}
	</style>
	<style type="text/css" id="RED_uiBorder">
		.ui-border {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			border-width: 0;
			border-style: solid;
			box-sizing: border-box;
			-moz-box-sizing: border-box;
			-webkit-box-sizing: border-box
		}
	</style>
</head>

<body>
	<div id="redMainContainer">
		<div id="redAdContainer"></div>
		<div id="redAuxContainer">
			<div id="preloader" class="ui-border"></div>
			<div id="fail"></div>
		</div>
	</div>
	<script type="text/javascript" src="https://cdn.flashtalking.com/frameworks/js/api/2/10/html5API_applenews.js"></script>
	<script type="text/javascript">
		function getAdPath() {
			return location.href.indexOf("flashtalking.com") > -1 ? "https://cdn.flashtalking.com/" + myFT.get("cID") + "/" +
				myFT.get("creativeID") + "/" : ""
		}

		function isIphonePlus() {
			return window.innerWidth === 414 || window.innerWidth === 736;
		}

		function inLandscape() {
			return window.innerWidth >= 667
		}
		var sizeAssetsPath = inLandscape() ? "Landscape/" : "Portrait/";
		adParams.appleNewsSize = inLandscape() ? '2208x212' : '1242x332'
		environments.forEach(function (t) {
			"velvet" === t.id && (t.adPath = getAdPath() + sizeAssetsPath)
		})
	</script>
	<script type="text/javascript">
		function failAd() {
			document.getElementById("redAdContainer").style.display = "none", document.getElementById("redAuxContainer").style.display =
				"block", document.body.style = "width: " + adParams.failoverWidth + "px; height: " + adParams.failoverHeight +
				"px; overflow: hidden;", document.getElementById("fail").style.cssText = "position: absolute; width: " + adParams.failoverWidth +
				"px; height: " + adParams.failoverHeight + "px; left:" + adParams.failoverX + "px; top:" + adParams.failoverY +
				"px; background-image: url(" + adParams.adPath + assets.failover.images[isIphonePlus() ? 1 : 0].source +
				"); background-size: contain; overflow: hidden; ", trackImpression(adParams.redAnalytics.stages.FAILOVER)
		}
	</script>
	<script type="text/javascript">
		function init() {
			prepareScope(), preparePreload(), prepareDebug()
		}

		function prepareScope() {
			prepareAsync(), preparePolite(), queryParams = getQueryParams(), adParams.failoverOnError && (window.onerror =
				handleError), adParams.requestedEnvironmentId = adParams.environmentId, prepareEnvironment(getDeployProfile(
				adParams.requestedEnvironmentId))
		}

		function prepareAsync() {
			async = new Async, async.onComplete(prepareAssetLoad)
		}

		function preparePolite() {
			function e() {
				var e = isDevEnvironment() ? 0 : adParams.politeLoadAfter;
				setTimeout(function () {
					async.done()
				}, 1e3 * e)
			}
			async.wait(), /comp|inter|loaded/.test(document.readyState) ? e() : document.addEventListener("DOMContentLoaded",
				function (a) {
					e()
				})
		}

		function handleError() {
			window.onerror = function () {}, failAd()
		}

		function preparePreload() {
			prepareAdParams(), checkForAdTagParams(), addContainerStyles(), preparePreloader(), prepareNetwork(),
				makeAuxClickable(), onImpression(), prepareRedAnalytics()
		}

		function prepareAdParams() {
			adParams.adSize = adParams.adWidth + "x" + adParams.adHeight, adParams.failoverWidth = adParams.preloaderWidth =
				adParams.adWidth, adParams.failoverHeight = adParams.preloaderHeight = adParams.adHeight, adParams.failoverX =
				adParams.preloaderX = 0, adParams.failoverY = adParams.preloaderY = 0
		}

		function checkForAdTagParams() {
			for (var e in queryParams) {
				var a = queryParams[e].replace(/^\{/, "").replace(/\}$/, "");
				"" != a && (global[e] = a)
			}
		}

		function addContainerStyles() {
			var e = document.getElementById("redMainContainer");
			e.style.cssText = "position: relative;";
			var a = "width: " + adParams.adWidth + "px; height: " + adParams.adHeight + "px; ";
			adParams.responsive && (a = "width: 100%; height: 100%; ", e.style.cssText += a), document.getElementById(
					"redAdContainer").style.cssText = "position: absolute; left: 0px; top: 0px; " + a +
				"opacity: 0; overflow: hidden; -webkit-user-select: none; -moz-user-select: none; user-select: none"
		}

		function preparePreloader() {
			var e, a = assets.preloader,
				t = document.getElementById("preloader"),
				r = a.borderWidth || 0,
				o = 0,
				n = function () {
					assets.preloader.startDelay > 0 ? setTimeout(async.done.bind(async), assets.preloader.startDelay) : async.done()
				},
				i = function () {
					s.wait();
					var n = a.images[o],
						l = new Image;
					n.offset || (n.offset = {
						x: 0,
						y: 0
					}), l.onload = function (d) {
						l.width *= n.scale || 1, l.height *= n.scale || 1;
						var c = Math.round((adParams.preloaderWidth - l.width) / 2 + (n.offset.x || 0) - r),
							p = Math.round((adParams.preloaderHeight - l.height) / 2 + (n.offset.y || 0) - r);
						e = "position: absolute; left: " + c + "px; top: " + p + "px;", l.style.cssText = e, t.appendChild(l), ++o < a.images
							.length ? i() : (e = adParams.responsive ? "width: 100%; height: 100%; " : "width: " + adParams.preloaderWidth +
								"px; height: " + adParams.preloaderHeight + "px; ", t.style.cssText =
								"overflow: hidden; position: absolute; top:" + adParams.preloaderY + "px; left:" + adParams.preloaderX +
								"px; " + e + "border-color: " + (a.borderColor || a.backgroundColor) + "; border-width: " + r +
								"px; background-color: " + a.backgroundColor + "; "), s.done()
					}, l.src = adParams.imagesPath + n.source + "?=" + Date.now()
				},
				s = new Async;
			s.onComplete(n), async.wait(), i()
		}

		function removePreloader() {
			var e = document.getElementById("preloader");
			if (e) {
				var a = document.getElementById("redAuxContainer");
				a.style.display = "none", a.removeChild(e)
			}
		}

		function prepareNetwork() {
			Network = new function () {
				this.exit = function (e) {
					"[object Array]" == Object.prototype.toString.call(e) && (1 == e.length ? myFT.clickTag(e[0]) : myFT.clickTag(e[
						0], e[1]))
				}, this.appendMacro = function (e, a) {
					return e.search(/^%%/) > -1 ? a : e + a
				}
			}
		}

		function makeAuxClickable() {
			var e = document.getElementById("redAuxContainer");
			e.addEventListener("click", handleAuxClick)
		}

		function handleAuxClick(e) {
			var a = e.changedTouches ? e.changedTouches[0] : e,
				t = {
					mouse: {
						global: {
							x: a.pageX,
							y: a.pageY
						}
					}
				};
			Network.exit(clickTag), adParams.redAnalytics && trackExit(t)
		}

		function prepareRedAnalytics() {
			adParams.redAnalytics.impressionId = getImpressionId(), trackImpression(adParams.redAnalytics.stages.INITIAL)
		}

		function trackImpression(e) {}

		function trackExit(e) {}

		function wait(e) {
			for (var a = (new Date).getTime();
				(new Date).getTime() < a + e;);
		}

		function doRedReport(e, a) {
			var t = new XMLHttpRequest,
				r = adParams.redAnalytics,
				o = "";
			"undefined" != typeof a && (o = "&coords=" + a.x + "x" + a.y), e = matchProtocolTo(r.serverUrl + r.clientId + "/" +
				r.campaignId + "/" + (r.adName + ":" + trackingStage + "/" + adParams.environmentId + "/" + adParams.adSize).replace(
					/\s/g, "_") + "/" + e + "?iid=" + r.impressionId + o), t.open("GET", e, !0), t.send(null)
		}

		function getImpressionId() {
			return (new Date).getTime() + "" + Math.random()
		}

		function prepareEnvironment(e) {
			adParams.environmentId = e.id, adParams.runPath = matchProtocolTo(e.runPath), adParams.corePath = adParams.runPath +
				("corePath" in e ? e.corePath : "_adlib/core/"), adParams.commonPath = adParams.runPath + ("commonPath" in e ? e.commonPath :
					"_adlib/common/"), adParams.jsPath = adParams.commonPath + ("jsPath" in e ? e.jsPath : "js/"), adParams.loaderPath =
				adParams.jsPath, adParams.fontsPath = adParams.commonPath + ("fontsPath" in e ? e.fontsPath : "fonts/"), adParams.adPath =
				adParams.runPath + e.adPath, adParams.imagesPath = adParams.adPath + ("imagesPath" in e ? e.imagesPath : "images/"),
				adParams.videosPath = adParams.adPath + ("videosPath" in e ? e.videosPath : "videos/")
		}

		function traceDeployProfile() {
			Array(120).join("-")
		}

		function prepareDebug() {
			var e;
			if ("undefined" != typeof debug && "function" != typeof debug ? e = 'via window-param "var debug = ' + debug + ';"' :
				"debug" in queryParams ? (e = 'via query-string "?debug=' + debug + '"', debug = null != queryParams.debug.match(
					/^(true|yes|t|y|1)/i)) : debug = !0, e)
				if (debug) {
					var a = getDeployProfile("debug");
					prepareEnvironment(a), traceDeployProfile(), console.log(" - DEBUG MODE ON, " + e), console.log(
						'    * requires "to_debug/" content is at: "' + a.runPath + '"')
				} else prepareEnvironment(getDeployProfile(adParams.requestedEnvironmentId)), traceDeployProfile();
			else traceDeployProfile()
		}

		function prepareAssetLoad() {
			prepareDependencies(), prepareExternalDependencies(), concatDependencies(), loadDependencies()
		}

		function prepareDependencies() {
			adParams.dependencies = [], adParams.optionalDependencies = []
		}

		function prepareExternalDependencies() {
			adParams.externalDependencies = ["https://cdn.flashtalking.com/frameworks/js/gsap/1.18.0/plugins/CSSPlugin.min.js",
				"https://cdn.flashtalking.com/frameworks/js/gsap/1.18.0/easing/EasePack.min.js",
				"https://cdn.flashtalking.com/frameworks/js/gsap/1.18.0/TweenLite.min.js"
			]
		}

		function concatDependencies() {
			assets.payload.text = assets.payload.text.filter(function (e) {
				var a = -1 == e.indexOf(".min.");
				return !!(debug && a || !debug && !a)
			}), assets.payload.text = assets.payload.text.map(function (e) {
				return adParams.adPath + e
			}), adParams.dependencies = adParams.dependencies.concat(adParams.optionalDependencies).concat(includes.call()).concat(
				assets.payload.text).concat(adParams.externalDependencies).concat(externalIncludes)
		}

		function loadLoader() {
			global.addEventListener("loaderControllerReady", loadDependencies);
			var e = document.createElement("script");
			e.type = "text/javascript", e.onerror = failAd, e.src = adParams.loaderPath + "LoaderController.js", document.getElementsByTagName(
				"head")[0].appendChild(e)
		}

		function loadDependencies() {
			var e = new Async;
			e.onComplete(prepareCore), e.wait();
			var a = new Loader(adParams.dependencies, {
				name: "jsLoader",
				onComplete: e.done,
				onFail: failAd,
				scope: global
			});
			if (assets.payload.binary.length) {
				e.wait();
				var t = new Loader(adParams.adPath + assets.payload.binary[0], {
					name: "fbaLoader",
					scope: global,
					fileType: "fba",
					onFail: failAd,
					onComplete: function (a) {
						new Loader(a, {
							name: "fbaContentLoader",
							scope: global,
							onFail: failAd,
							onComplete: function (a) {
								fbaContent = a, e.done()
							}
						}).load()
					}
				});
				t.load()
			}
			a.load()
		}

		function prepareCore() {
			PrepareCore.init(prepareCommon, fbaContent)
		}

		function prepareCommon() {
			PrepareCommon.init(prepareBuild)
		}

		function prepareBuild() {
			Control.prepareBuild()
		}

		function getDeployProfile(e) {
			for (var a = 0; a < environments.length; a++)
				if (environments[a].id === e) return environments[a];
			return !1
		}

		function getQueryParams() {
			var e = {},
				a = window.location.href.split("?");
			if (a.length > 1) {
				var t = a[1].split("&");
				for (var r in t) {
					var o = t[r].split("=");
					2 == o.length && (e[o[0]] = decodeURIComponent(o[1]))
				}
			}
			return e
		}

		function matchProtocolTo(e) {
			if (e.search(/^http/) > -1) {
				var a = window.location.href.search(/^https/) > -1 || adParams.forceHttps,
					t = a ? "https://" : "http://";
				if (e.search(/.*edgecastcdn/) > -1) {
					var r = a ? "ne1." + e.match(/w(a|p)c/i)[0] + "." : e.match(/w(a|p)c\.[a-z0-9]*\./i)[0];
					e = t + r + "edgecastcdn" + e.replace(/.*edgecastcdn/, "")
				} else if (e.search(/.*paramount\.com/) > -1) {
					var o = a ? "paramountdlds-a.akamaihd.net" : "downloads.paramount.com";
					e = t + o + e.replace(/.*paramount\.com/, "")
				} else e = e.search(/espn\.go\.com/) > -1 || e.search(/secure\.espncdn\.com/) > -1 ? "https://secure.espncdn.com" +
					e.replace(/^.*\.com/, "") : e.replace(/^https?\:\/\//i, t)
			} else e.search(/^\/\/cdn\.flashtalking\.com/) > -1 && (e = "https:" + e);
			return e
		}

		function trace() {
			if (console && ("undefined" == typeof debug || debug)) {
				for (var e = ["RED[Double Banner|19.9] "], a = 0; a < arguments.length; a++) e.push(arguments[a]);
				Function.prototype.apply.call(console.log, console, e)
			}
		}

		function getStaticSchedule() {
			return StaticGenerator.schedule
		}

		function Async() {
			var e = this;
			e.tokens = [], e.callback, e.wait = function () {
				e.tokens.push(1)
			}, e.done = function () {
				e.tokens.pop(), 0 == e.tokens.length && e.callback.call()
			}, e.onComplete = function (a) {
				e.callback = a
			}
		}

		function LoaderTicker() {
			var e = this;
			e._setTicker = function (a) {
				var t = document.createElement("div");
				t.innerHTML = a.content, t.style.cssText = a.css || "", document.body.appendChild(t);
				var r = void 0 != a.width ? a.width : t.offsetWidth;
				t.style.fontFamily = a.font || "";
				var o = setTimeout(function () {
						clearInterval(n), e._handleFail()
					}, 5e3),
					n = setInterval(function () {
						t.offsetWidth != r && (clearTimeout(o), clearInterval(n), e._handleTickerComplete(t))
					}, 10)
			}, e._removeTickerNode = function (e) {
				e.parentNode.removeChild(e)
			}
		}

		function LoaderBase() {
			var e = this,
				a = arguments && arguments.length > 1 ? arguments[1] : arguments[0] || {};
			e.onComplete = a.onComplete || function () {}, e.onFail = a.onFail || function () {}, e.onProgress = a.onProgress ||
				function () {}, e.name = a.name || "", e.scope = a.scope || e, e.dataRaw, e.cacheBuster = a.cacheBuster || !1, e._failCalled = !
				1, e._handleFail = function () {
					e._failCalled || (e._failCalled = !0, e.onFail.call(e.scope, e))
				}
		}

		function LoaderSource() {
			var e = this,
				a = arguments && arguments.length > 1 ? arguments[1] : arguments[0] || {};
			e.url = global.matchProtocolTo(arguments[0] || ""), a.platformGetUrl && (e.platformGetUrl = a.platformGetUrl, e.url =
					a.platformGetUrl(e.url)), e.fileName = void 0 === a.id ? LoaderUtils.getFileName(e.url) : a.id, e.fileType = a.fileType ||
				LoaderUtils.getFileType(e.url)
		}

		function InlineLoader() {
			var e = this;
			LoaderSource.apply(e, arguments), LoaderBase.apply(e, arguments)
		}

		function DataLoader() {
			var e = this;
			LoaderSource.apply(e, arguments), LoaderBase.apply(e, arguments);
			var a = arguments && arguments.length > 1 ? arguments[1] : arguments[0] || {};
			e.method = (a.method || "get").toLowerCase(), e.query = a.query || null, e.responseType = a.responseType || null
		}

		function ImageLoader() {
			var e = this;
			LoaderSource.apply(e, arguments), LoaderBase.apply(e, arguments), LoaderTicker.apply(e, arguments);
			var a = arguments && arguments.length > 1 ? arguments[1] : arguments[0] || {};
			e.renderOnly = !!a.renderOnly, e.crossOrigin = a.crossOrigin
		}

		function FontLoader() {
			var e = this;
			LoaderSource.apply(e, arguments), LoaderBase.apply(e, arguments), LoaderTicker.apply(e, arguments)
		}

		function FbvLoader() {
			var e = this;
			DataLoader.apply(e, arguments);
			var a = arguments && arguments.length > 1 ? arguments[1] : arguments[0] || {};
			e.onSpecs = a.onSpecs || function () {}, e.available = 0, e.images = [], e.isBytesLoaded = !1, e._imagesRaw = [], e._prev = -
				1, e._specs, e._byteLength = 0, e._byteBuffer = 3e3, e._imageRequestMax = 6, e._imageRequestExcess = !1
		}

		function ViewLoader() {
			var e = this;
			LoaderBase.apply(e, arguments), arguments && arguments.length > 1 ? arguments[1] : arguments[0] || {}, e.viewPaths =
				arguments[0]
		}

		function Loader() {
			var e = this;
			LoaderBase.apply(e, arguments);
			var a = arguments && arguments.length > 1 ? arguments[1] : arguments[0] || {};
			e._queue = {}, e._total = 0, e._active = !1, e._startedCount = 0, e.prepend = a.prepend || "", e.platformGetUrl = a.platformGetUrl,
				e.fileType = a.fileType || null, e.content = [], e.crossOrigin = a.crossOrigin || void 0, e.add(arguments[0])
		}
		var global = this,
			View = {},
			Network, async, queryParams, adData;
		if (isDevEnvironment()) {
			var scriptElem = document.createElement("script");
			scriptElem.type = "text/javascript", scriptElem.src = matchProtocolTo(
				"//cdn.flashtalking.com/frameworks/js/api/2/10/html5API_applenews.js"), document.getElementsByTagName("head")[
				0].appendChild(scriptElem);
			var ftLoadIntervalId = setInterval(function () {
				"undefined" != typeof myFT && "undefined" != typeof myFT.instantAds && (clearInterval(ftLoadIntervalId), init())
			}, 20)
		} else init();
		var trackingStage, fbaContent;
		Polyfills = new function () {
			function e(e, a) {
				a = a || {
					bubbles: !1,
					cancelable: !1,
					detail: void 0
				};
				var t = document.createEvent("CustomEvent");
				return t.initCustomEvent(e, a.bubbles, a.cancelable, a.detail), t
			}
			try {
				new CustomEvent("test")
			} catch (a) {
				e.prototype = window.Event.prototype, window.CustomEvent = e
			}
		};
		var LoaderUtils = new function () {
			var e = this;
			e.createXMLHttpRequest = function () {
				try {
					return new XMLHttpRequest
				} catch (e) {}
				try {
					return new ActiveXObject("Msxml2.XMLHTTP")
				} catch (e) {}
				return alert("XMLHttpRequest not supported"), null
			}, e.getFileName = function (e) {
				var a = e.lastIndexOf("."),
					t = e.lastIndexOf("/") + 1;
				return t > a && (a = void 0), e.substring(t, a)
			}, e.getFontName = function (e) {
				return e.substring(e.lastIndexOf("/") + 1, e.indexOf("."))
			}, e.getFileType = function (e) {
				e = e || "";
				var a = e.indexOf("?");
				a > -1 && (e = e.substr(0, a));
				var t = e.match(/[^\\]*\.(\w+)$/),
					r = e.match(/image\/(jpeg|jpg|png)/),
					o = t ? t[1] : r ? r[1] : "unknown";
				return o
			}, e.getFullUrl = function (e, a, t) {
				var r = LoaderUtils._getUrlPrepend(e),
					o = global.matchProtocolTo(r + _file);
				return t && (o = t(o)), url
			}, e.getUrlPrepend = function (e) {
				return e ? e.replace(/\/?$/, "/") : ""
			}, e.getParamsFromData = function (e) {
				if ("string" == typeof e) return e;
				var a = "";
				for (var t in e) a += t + "=" + e[t] + "&";
				return a.substr(0, a.length - 1)
			}
		};
		InlineLoader.prototype = {
				load: function () {
					var e = this,
						a = "css" == e.fileType ? e._createLink() : e._createScript();
					a.charset = "utf-8", a.onload = e._handleComplete.bind(e), a.onerror = e._handleFail, "css" == e.fileType ? a.href =
						this.url : a.src = e.url, document.getElementsByTagName("head")[0].appendChild(a)
				},
				_createScript: function () {
					var e = document.createElement("script");
					return e.type = "text/javascript", e
				},
				_createLink: function () {
					var e = document.createElement("link");
					return e.rel = "stylesheet", e.type = "text/css", e
				},
				_handleComplete: function (e) {
					var a = this;
					a.dataRaw = e.target, a.onComplete.call(a.scope, a)
				}
			}, InlineLoader.prototype.constructor = InlineLoader, LoaderSource.call(InlineLoader.prototype), LoaderBase.call(
				InlineLoader.prototype), DataLoader.prototype = {
				load: function () {
					var e = this,
						a = null,
						t = "post" === e.method;
					e.req = LoaderUtils.createXMLHttpRequest(), void 0 != e.responseType && (e.req.responseType = e.responseType);
					var r = e.url;
					switch (e.query && (a = LoaderUtils.getParamsFromData(e.query), encodeURIComponent(a), t || (r += "?" + a, a =
							null)), e.cacheBuster && (r += e.query && !t ? "&" : "?", r += "cb=" + (new Date).getTime()), e.req.onreadystatechange =
						e._handleStateChange.bind(e), e.req.open(e.method, r, !0), e.fileType) {
						case "xml":
							e.req.overrideMimeType && e.req.overrideMimeType("text/xml");
							break;
						case "json":
							e.req.overrideMimeType && e.req.overrideMimeType("application/json");
							break;
						case "fba":
						case "bin":
						case "binary":
							e.responseType = e.req.responseType = "arraybuffer"
					}
					"post" === e.method && e.req.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), e.req.send(a)
				},
				_handleStateChange: function (e) {
					var a = this;
					switch (a.req.readyState) {
						case 3:
							200 == this.req.status && (a.dataRaw = a.responseType ? a.req.response : a.req.responseText, a._handleProgress(
								a));
							break;
						case 4:
							200 == a.req.status ? (a.dataRaw = a.responseType ? a.req.response : a.req.responseText, a._handleComplete(a)) :
								a._handleFail({
									target: e
								})
					}
				},
				_handleProgress: function () {
					var e = this;
					e.onProgress.call(e.scope, e)
				},
				_handleComplete: function () {
					var e = this;
					e.onComplete.call(e.scope, e)
				}
			}, DataLoader.prototype.constructor = DataLoader, LoaderSource.call(DataLoader.prototype), LoaderBase.call(
				DataLoader.prototype), ImageLoader.prototype = {
				load: function () {
					var e = this;
					if (e.renderOnly) e._setTicker({
						content: e.url,
						width: 0
					});
					else {
						var a = new Image;
						a.id = e.fileName, a.crossOrigin = e.crossOrigin, a.onload = e._handleComplete.bind(e), a.onerror = e._handleFail,
							a.src = e.url
					}
				},
				_handleTickerComplete: function (e) {
					for (var a = this, t = e.childNodes, r = 0; r < t.length; r++) {
						var o = t[r];
						if (o instanceof SVGElement) {
							o.id = a.fileName;
							break
						}
					}
					a._handleComplete({
						target: o
					}), a._removeTickerNode(e)
				},
				_handleComplete: function (e) {
					var a = this;
					a.dataRaw = e.target, a.onComplete.call(a.scope, a)
				}
			}, ImageLoader.prototype.constructor = ImageLoader, LoaderSource.call(ImageLoader.prototype), LoaderBase.call(
				ImageLoader.prototype), LoaderTicker.call(ImageLoader.prototype), FontLoader.prototype = {
				load: function () {
					var e = this;
					e.fileName = e.fileName.split(".")[0];
					var a = "@font-face { font-family: " + e.fileName + "; src: url(" + e.url + ") format('truetype'); }",
						t = document.getElementById("RED_fontStyleSheet");
					if (t) t.innerHTML += a;
					else {
						var r = document.createElement("style");
						r.type = "text/css", r.media = "screen", r.id = "RED_fontStyleSheet", r.appendChild(document.createTextNode(a)),
							document.getElementsByTagName("head")[0].appendChild(r)
					}
					e._setTicker({
						content: " !\"\\#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~",
						css: "position:absolute; top:-1000px; font-size:100px; font-family:san-serif; font-variant:normal; font-style:normal; font-weight:normal; letter-spacing:0; white-space:nowrap;",
						font: e.fileName
					})
				},
				_handleTickerComplete: function (e) {
					var a = this;
					setTimeout(function () {
						a._removeTickerNode(e)
					}, 300), a._handleComplete()
				},
				_handleComplete: function (e) {
					var a = this;
					a.dataRaw = a.fileName, a.onComplete.call(a.scope, a)
				}
			}, FontLoader.prototype.constructor = FontLoader, LoaderSource.call(FontLoader.prototype), LoaderBase.call(
				FontLoader.prototype), LoaderTicker.call(FontLoader.prototype), FbvLoader.prototype = Object.create(DataLoader.prototype),
			FbvLoader.prototype.constructor = FbvLoader, FbvLoader.prototype._handleProgress = function (e) {
				var a = this;
				if (a._imageRequestExcess && !a.isBytesLoaded) return void a._manageImageCreate();
				var t = e.dataRaw.length - a._byteLength;
				if (a._byteLength = e.dataRaw.length, !(t < a._byteBuffer && t > 0 && a._specs) && (a._imagesRaw = e.dataRaw.split(
						":::"), a._imagesRaw.length > 1)) {
					var r = a._imagesRaw[0].split(";;;");
					a._specs || (a._specs = JSON.parse(r[0]), a.onSpecs.call(a.scope, a)), a._imagesRaw[0] = r[1], a._manageImageCreate()
				}
			}, FbvLoader.prototype._manageImageCreate = function () {
				var e = this,
					a = e._imagesRaw.length;
				e.isBytesLoaded || (a -= 2);
				var t = a - e._prev,
					r = e._prev - e.available;
				if (r > e._imageRequestMax) return void(e._imageRequestExcess = !0);
				t > e._imageRequestMax ? (e._imageRequestExcess = !0, a = a - t + e._imageRequestMax) : e._imageRequestExcess = !1;
				for (var o = e._prev; a > o; o++) e._imageCreateStart(o);
				e._imageRequestExcess ? e._prev = a : e._prev = e._imagesRaw.length - 2
			}, FbvLoader.prototype._imageCreateStart = function (e) {
				if (!(0 > e)) {
					var a = this;
					if (!a.images[e]) {
						var t = a._imagesRaw[e].split(")");
						a.images[e] = {
							dataRaw: t
						};
						var r = "data:image/jpg;base64," + t[1];
						new ImageLoader(r, {
							id: e,
							scope: a,
							fileType: "jpg",
							onComplete: a._handleImageLoadComplete,
							onFail: function (e) {}
						}).load()
					}
				}
			}, FbvLoader.prototype._handleImageLoadComplete = function (e) {
				var a = this,
					t = e.dataRaw;
				a.images[t.id].image = t, a.available++, a.available / a._specs.frames, a.onProgress.call(a.scope, a, t), a.isBytesLoaded &&
					a._imageRequestExcess && a.available + a._imageRequestMax >= a._prev && a._manageImageCreate(), +t.id === a._specs
					.frames - 1 && a.onComplete.call(a.scope, a)
			}, FbvLoader.prototype._handleComplete = function (e) {
				var a = this;
				a.isBytesLoaded = !0, a._handleProgress(e)
			}, ViewLoader.prototype = {
				load: function () {
					var e = this;
					if (!e.viewPaths.length) return void e.onComplete.call(e.scope, e);
					var a = 0;
					for (var t in e.viewPaths) new DataLoader(e.viewPaths[t], {
						fileType: "text/html",
						onComplete: function (t) {
							e.processLoadedView(t), a++, a === e.viewPaths.length && e.onComplete.call(e.scope, e)
						}
					}).load()
				},
				processLoadedView: function (e) {
					for (var a = "", t = new RegExp("<style[^>]*>(.*)</style>", "g"); match = t.exec(e.dataRaw);) a += match[i];
					var r = e.dataRaw.replace(t, "").trim();
					global.Views[e.fileName] = r, global.ViewStyles[e.fileName] = a
				}
			}, ViewLoader.prototype.constructor = ViewLoader, Loader.prototype.constructor = Loader, LoaderBase.call(Loader.prototype),
			Loader.prototype = {
				add: function (e) {
					var a = this;
					if ("string" == typeof e) a._addSingleLoad(e);
					else if (e instanceof Array)
						for (var t = 0; t < e.length; t++) a._addSingleLoad(e[t]);
					else e instanceof Loader && (e.content && e.content[0] && "fba" == e.content[0].fileType ? a._addFbaSubLoads(e.content[
						0]) : a._addSubLoad(e))
				},
				load: function () {
					var e = this;
					if (e._active = !0, e._total <= 0);
					else {
						var a = !1,
							t = "";
						for (var r in e._queue)
							if (!(e._queue[r] instanceof Loader)) {
								a || (a = !0, t += 'Loader "' + e.name + '" requesting:');
								var o = e._queue[r].fileName,
									n = e._queue[r].fileType,
									i = o.indexOf("." + n),
									s = i > -1 ? o : o + "." + n;
								t += "\n\t -> " + (e._queue[r].prepend || "") + s
							}
					}
					e._startSingleLoad(0)
				},
				getAllContent: function () {
					function e(t) {
						for (var r = 0; r < t.length; r++) t[r] instanceof Loader ? e(t[r].content) : a.push(t[r])
					}
					var a = [];
					return e(this.content), a
				},
				getAllContentRaw: function () {
					for (var e = this.getAllContent(), a = 0; a < e.length; a++) e[a] = e[a].dataRaw;
					return e
				},
				getLoader: function (e) {
					function a(r) {
						for (var o = 0; o < r.length; o++) r[o] instanceof Loader && (!r[o] || r[o].name !== e && r[o] !== e ? a(r[o].content) :
							t = r[o])
					}
					var t = null;
					return a(this.content), t
				},
				_addSingleLoad: function (e, a) {
					var t, r = this,
						o = a ? a[1] : r.fileType || LoaderUtils.getFileType(e);
					switch (o) {
						case "jpg":
						case "jpeg":
						case "gif":
						case "png":
						case "svg":
							t = "ImageLoader";
							break;
						case "ttf":
							t = "FontLoader";
							break;
						case "json":
						case "fba":
						case "bin":
						case "binary":
							t = "DataLoader";
							break;
						case "fbv":
							t = "FbvLoader";
							break;
						default:
							t = "InlineLoader"
					}
					var e = a ? e : r.prepend + e,
						n = new global[t](e, {
							scope: r,
							platformGetUrl: r.platformGetUrl,
							onComplete: r._handleSingleLoadComplete,
							onFail: r._handleFail,
							fileType: o,
							cacheBuster: r.cacheBuster,
							crossOrigin: r.crossOrigin
						});
					a && (n.fileName = a[0]), n.queueIndex = r._total, r._queue[r._total] = n, r._total++
				},
				_addSubLoad: function (e) {
					var a = this;
					e.onComplete = a._handleSingleLoadComplete.bind(a), e.onProgress = a._handleProgress.bind(a), e.onFail = a._handleFail,
						e.queueIndex = a._total, a._queue[a._total] = e, a._total++
				},
				_addFbaSubLoads: function (e) {
					var a = new Uint8Array(4),
						t = new Uint32Array(a.buffer),
						r = 44,
						o = new Uint8Array(e.dataRaw, r, 1)[0];
					r += 5;
					for (var n = 0; o > n; n++) {
						for (var i = new Uint8Array(e.dataRaw, r, 4), s = 4, l = 0; 4 > l; l++) a[--s] = i[l];
						var d = t[0];
						r += 7;
						var c = String.fromCharCode(new Uint8Array(e.dataRaw, r++, 1)),
							p = new Uint8Array(e.dataRaw, r + 3, 1),
							m = p[0] || 0,
							u = new Uint8Array(e.dataRaw, r + 4, m),
							f = String.fromCharCode.apply(String, u);
						m += 4;
						var h = new Uint8Array(e.dataRaw, r + m, d - m);
						r += d + 4;
						var g = f.split("."),
							v = "f" == c ? "application/x-font-ttf" : "image/" + ("svg" == g[1] ? "svg+xml" : g[1]),
							y = new Blob([h], {
								type: v
							}),
							P = URL.createObjectURL(y);
						this._addSingleLoad(P, g)
					}
				},
				_startSingleLoad: function (e) {
					var a = this,
						t = a._queue[e];
					0 == a._total ? a._handleComplete() : e < a._total && (t instanceof Loader || e < a._total - 1 && a._startLoadTimeOut(
						++
						e), t.load())
				},
				_startLoadTimeOut: function (e) {
					var a = this;
					setTimeout(function () {
						a._startSingleLoad(e)
					}, 10)
				},
				_handleSingleLoadComplete: function (e) {
					var a = this;
					a.content[e.queueIndex] = e, delete a._queue[e.queueIndex], a._handleProgress(), void 0 == e.url && e.queueIndex <
						a._total - 1 && a._startLoadTimeOut(e.queueIndex + 1)
				},
				_handleProgress: function () {
					for (var e = this, a = e.content.length, t = 0, r = 0; a > r; r++) e.content[r] && t++;
					var o = t,
						n = 0;
					t < e._total && e._queue[t] && (n = e._queue[t].progress / e._total || 0), e.progress = o / e._total + n, e.rawProgress =
						t / e._total + n, e.onProgress.call(e.scope, e), t >= e._total && e._handleComplete()
				},
				_handleComplete: function () {
					var e = this;
					e.onComplete.call(e.scope, e)
				}
			}
	</script>
</body>

</html>